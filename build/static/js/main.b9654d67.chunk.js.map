{"version":3,"sources":["components/header/index.js","components/header/app-header.js","components/search/index.js","components/search/search.js","components/post-status/index.js","components/post-status/post-status.js","components/post-list-item/index.js","components/post-list-item/postItem.js","components/Post-list/index.js","components/Post-list/postList.js","components/post-add-form/index.js","components/post-add-form/addForm.js","components/app/index.js","components/app/app.js","index.js"],"names":["AppHeader","liked","allPosts","className","SearchPanel","props","state","term","onUpdateSearch","bind","e","target","value","this","setState","type","placeholder","onChange","Component","Filter","buttons","name","label","map","filter","onFilterSelect","clazz","onClick","Item","onDelete","onToggleImportant","onToggleLiked","like","classNames","important","List","posts","elements","i","id","itemProps","AddForm","text","onValueChange","onSubmit","preventDefault","onAdd","App","data","deleteItem","addItem","maxId","index","findIndex","elem","before","slice","after","newItem","old","items","length","item","indexOf","visiblePosts","filterPost","searchPost","ReactDOM","render","document","getElementById"],"mappings":"oXAEeA,ECAG,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACI,sBAAKC,UAAU,oBAAf,UACI,oDACA,+BAAKD,EAAL,iBAA6BD,SCL1BG,G,wDCGX,WAAYC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACTC,KAAM,IAEV,EAAKC,eAAiB,EAAKA,eAAeC,KAApB,gBALP,E,kDAOnB,SAAeC,GACX,IAAMH,EAAOG,EAAEC,OAAOC,MACtBC,KAAKC,SAAS,CAAEP,SAChBM,KAAKR,MAAMG,eAAeD,K,oBAE9B,WACI,OACI,uBACIJ,UAAU,4BACVY,KAAK,OACLC,YAAY,YACZJ,MAAOC,KAAKP,MAAMC,KAClBU,SAAUJ,KAAKL,qB,GApBUU,cCF1BC,G,wDCIX,WAAYd,GAAQ,IAAD,8BACf,cAAMA,IACDe,QAAU,CACX,CAAEC,KAAM,MAAOC,MAAO,OACtB,CAAED,KAAM,OAAQC,MAAO,UAJZ,E,0CAOnB,WAAU,IAAD,OAECF,EAAUP,KAAKO,QAAQG,KAAI,YAAsB,IAAnBF,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,MAAY,EACf,EAAKjB,MAAhCmB,EAD0C,EAC1CA,OAAQC,EADkC,EAClCA,eAEVC,EADSF,IAAWH,EACH,WAAa,wBACpC,OACI,wBAAQN,KAAK,SACTZ,UAAS,cAASuB,GAElBC,QAAS,kBAAMF,EAAeJ,IAHlC,SAIKC,GAFID,MAMjB,OACI,qBAAKlB,UAAU,YAAf,SACKiB,Q,GAzBmBF,c,QCHrBU,G,kKCGX,WAAU,IAAD,EAC0Ef,KAAKR,MAA5EiB,EADH,EACGA,MAAOO,EADV,EACUA,SAAUC,EADpB,EACoBA,kBAAmBC,EADvC,EACuCA,cAAeC,EADtD,EACsDA,KACvDC,EAAa,+CAOjB,OATK,EAC4DC,YAG7DD,GAAc,cAEdD,IACAC,GAAc,SAGd,sBAAK9B,UAAW8B,EAAhB,UACI,sBAAM9B,UAAU,sBACZwB,QAASI,EADb,SAEKT,IAEL,sBAAKnB,UAAU,mDAAf,UACI,wBACIY,KAAK,SACLZ,UAAU,kBACVwB,QAASG,EAHb,SAII,mBAAG3B,UAAU,iBAEjB,wBACIY,KAAK,SACLZ,UAAU,mBACVwB,QAASE,EAHb,SAII,mBAAG1B,UAAU,oBAEjB,mBAAGA,UAAU,0B,GA7BCe,cCFnBiB,G,MCEF,SAAC,GAA2D,IAAzDC,EAAwD,EAAxDA,MAAOP,EAAiD,EAAjDA,SAAUC,EAAuC,EAAvCA,kBAAmBC,EAAoB,EAApBA,cAC1CM,EAAWD,EAAMb,KAAI,SAAAe,GAAM,IACrBC,EAAqBD,EAArBC,GAAOC,EADa,YACCF,EADD,QAE5B,OACI,oBAAanC,UAAU,kBAAvB,SACI,cAAC,EAAD,2BAAUqC,GAAV,IACIX,SAAU,kBAAMA,EAASU,IACzBT,kBAAmB,kBAAMA,EAAkBS,IAC3CR,cAAe,kBAAMA,EAAcQ,QAJlCA,MASjB,OAEI,oBAAIpC,UAAU,sBAAd,SACKkC,MClBEI,G,wDCGX,WAAYpC,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACToC,KAAM,IAEV,EAAKC,cAAgB,EAAKA,cAAclC,KAAnB,gBACrB,EAAKmC,SAAW,EAAKA,SAASnC,KAAd,gBAND,E,iDAQnB,SAAcC,GACVG,KAAKC,SAAS,CACV4B,KAAMhC,EAAEC,OAAOC,U,sBAGvB,SAASF,GACLA,EAAEmC,iBACFhC,KAAKR,MAAMyC,MAAMjC,KAAKP,MAAMoC,MAC5B7B,KAAKC,SAAS,CACV4B,KAAM,O,oBAGd,WACI,OACI,uBACIvC,UAAU,sBACVyC,SAAU/B,KAAK+B,SAFnB,UAGI,uBACI7B,KAAK,OACLC,YAAY,qBACZb,UAAU,8BACVc,SAAUJ,KAAK8B,cACf/B,MAAOC,KAAKP,MAAMoC,OAEtB,wBACI3B,KAAK,SACLZ,UAAU,4BAFd,wB,GAjCqBe,cCFtB6B,G,wDCWX,WAAY1C,GAAQ,IAAD,8BACf,cAAMA,IACDC,MAAQ,CACT0C,KAAM,CACF,CACI1B,MAAO,uBACPY,WAAW,EACXK,GAAI,GAER,CACIjB,MAAO,sCACPY,WAAW,EACXK,GAAI,GAER,CACIjB,MAAO,4CACPY,WAAW,EACXK,GAAI,GAER,CACIjB,MAAO,yBACPY,WAAW,EACXK,GAAI,GAER,CACIjB,MAAO,6CACPY,WAAW,EACXK,GAAI,IAGZhC,KAAM,GACNiB,OAAQ,OAEZ,EAAKyB,WAAa,EAAKA,WAAWxC,KAAhB,gBAClB,EAAKyC,QAAU,EAAKA,QAAQzC,KAAb,gBACf,EAAKqB,kBAAoB,EAAKA,kBAAkBrB,KAAvB,gBACzB,EAAKsB,cAAgB,EAAKA,cAActB,KAAnB,gBACrB,EAAKD,eAAiB,EAAKA,eAAeC,KAApB,gBACtB,EAAKgB,eAAiB,EAAKA,eAAehB,KAApB,gBACtB,EAAK0C,MAAQ,EAvCE,E,8CAyCnB,SAAWZ,GACP1B,KAAKC,UAAS,YAAe,IAAZkC,EAAW,EAAXA,KACPI,EAAQJ,EAAKK,WAAU,SAACC,GAAD,OAAUA,EAAKf,KAAOA,KAE7CgB,EAASP,EAAKQ,MAAM,EAAGJ,GACvBK,EAAQT,EAAKQ,MAAMJ,EAAQ,GAGjC,MAAO,CACHJ,KAFQ,sBAAOO,GAAP,YAAkBE,U,qBAMtC,SAAQf,GACJ,IAAMgB,EAAU,CACZpC,MAAOoB,EACPR,WAAW,EACXK,GAAI1B,KAAKsC,SAGbtC,KAAKC,UAAS,YAAe,IAAZkC,EAAW,EAAXA,KAEb,MAAO,CACHA,KAFQ,sBAAOA,GAAP,CAAaU,U,+BAMjC,SAAkBnB,GACd1B,KAAKC,UAAS,YAAe,IAAZkC,EAAW,EAAXA,KACPI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,KAE3CoB,EAAMX,EAAKI,GACXM,EAAO,2BAAQC,GAAR,IAAazB,WAAYyB,EAAIzB,YAG1C,MAAO,CACHc,KAFQ,sBAAOA,EAAKQ,MAAM,EAAGJ,IAArB,CAA6BM,GAA7B,YAAyCV,EAAKQ,MAAMJ,EAAQ,W,2BAOhF,SAAcb,GACV1B,KAAKC,UAAS,YAAe,IAAZkC,EAAW,EAAXA,KACPI,EAAQJ,EAAKK,WAAU,SAAAC,GAAI,OAAIA,EAAKf,KAAOA,KAE3CoB,EAAMX,EAAKI,GACXM,EAAO,2BAAQC,GAAR,IAAa3B,MAAO2B,EAAI3B,OAGrC,MAAO,CACHgB,KAFQ,sBAAOA,EAAKQ,MAAM,EAAGJ,IAArB,CAA6BM,GAA7B,YAAyCV,EAAKQ,MAAMJ,EAAQ,W,wBAOhF,SAAWQ,EAAOrD,GACd,OAAoB,IAAhBA,EAAKsD,OACED,EAGJA,EAAMpC,QAAO,SAACsC,GACjB,OAAOA,EAAKxC,MAAMyC,QAAQxD,IAAS,O,wBAI3C,SAAWqD,EAAOpC,GACd,MAAe,SAAXA,EACOoC,EAAMpC,QAAO,SAAAsC,GAAI,OAAIA,EAAK9B,QAE1B4B,I,4BAIf,SAAerD,GACXM,KAAKC,SAAS,CAAEP,W,4BAGpB,SAAeiB,GACXX,KAAKC,SAAS,CAAEU,a,oBAEpB,WAAU,IAAD,EAC0BX,KAAKP,MAA5B0C,EADH,EACGA,KAAMzC,EADT,EACSA,KAAMiB,EADf,EACeA,OACdvB,EAAQ+C,EAAKxB,QAAO,SAACsC,GAAD,OAAUA,EAAK9B,QAAM6B,OACzC3D,EAAW8C,EAAKa,OAChBG,EAAenD,KAAKoD,WAAWpD,KAAKqD,WAAWlB,EAAMzC,GAAOiB,GAClE,OACI,sBAAKrB,UAAU,MAAf,UACI,cAAC,EAAD,CAAWF,MAAOA,EAAOC,SAAUA,IACnC,sBAAKC,UAAU,sBAAf,UACI,cAAC,EAAD,CAAaK,eAAgBK,KAAKL,iBAClC,cAAC,EAAD,CAAQgB,OAAQA,EACZC,eAAgBZ,KAAKY,oBAE7B,cAAC,EAAD,CAAMW,MAAO4B,EACTnC,SAAUhB,KAAKoC,WACfnB,kBAAmBjB,KAAKiB,kBACxBC,cAAelB,KAAKkB,gBAExB,cAAC,EAAD,CAASe,MAAOjC,KAAKqC,iB,GA7IJhC,cCLjCiD,IAASC,OAAO,cAAC,EAAD,IAASC,SAASC,eAAe,W","file":"static/js/main.b9654d67.chunk.js","sourcesContent":["import AppHeader from './app-header';\r\n\r\nexport default AppHeader;","import React from 'react';\r\nimport './app-header.css';\r\nconst AppHeader = ({ liked, allPosts }) => {\r\n    return (\r\n        <div className=\"app-header d-flex\">\r\n            <h1>Marina Starostenko</h1>\r\n            <h2>{allPosts} posts, liked {liked}</h2>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default AppHeader;","import SearchPanel from './search';\r\nexport default SearchPanel;","import React, { Component } from 'react';\r\nimport './search-panel.css';\r\n\r\nexport default class SearchPanel extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            term: ''\r\n        }\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n    }\r\n    onUpdateSearch(e) {\r\n        const term = e.target.value;\r\n        this.setState({ term });\r\n        this.props.onUpdateSearch(term);\r\n    }\r\n    render() {\r\n        return (\r\n            <input\r\n                className=\"form-control search-input\"\r\n                type=\"text\"\r\n                placeholder=\"Search...\"\r\n                value={this.state.term}\r\n                onChange={this.onUpdateSearch}\r\n            />\r\n        )\r\n    }\r\n}","import Filter from \"./post-status\";\r\nexport default Filter;","import React, { Component } from 'react';\r\nimport './post-status-filter.css';\r\n\r\n\r\nexport default class Filter extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.buttons = [\r\n            { name: 'all', label: 'All' },\r\n            { name: 'like', label: 'Liked' }\r\n        ];\r\n    }\r\n    render() {\r\n\r\n        const buttons = this.buttons.map(({ name, label }) => {\r\n            const { filter, onFilterSelect } = this.props;\r\n            const active = filter === name;\r\n            const clazz = active ? 'btn-info' : 'btn-outline-secondary'\r\n            return (\r\n                <button type='button'\r\n                    className={`btn ${clazz}`}\r\n                    key={name}\r\n                    onClick={() => onFilterSelect(name)}>\r\n                    {label}</button>\r\n            )\r\n        });\r\n\r\n        return (\r\n            <div className=\"btn-group\">\r\n                {buttons}\r\n            </div>\r\n        )\r\n    }\r\n}","import Item from \"./postItem\";\r\nexport default Item;","import React, { Component } from 'react';\r\nimport './post-list-item.css';\r\n\r\nexport default class Item extends Component {\r\n    render() {\r\n        const { label, onDelete, onToggleImportant, onToggleLiked, like, important } = this.props;\r\n        let classNames = \"app-list-item d-flex justify-content-between\"\r\n        if (important) {\r\n            classNames += ' important';\r\n        }\r\n        if (like) {\r\n            classNames += ' like';\r\n        }\r\n        return (\r\n            <div className={classNames}>\r\n                <span className=\"app-list-item-label\"\r\n                    onClick={onToggleLiked}>\r\n                    {label}\r\n                </span>\r\n                <div className=\"d-flex justify-content-center align-items-center\">\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-star btn-sm\"\r\n                        onClick={onToggleImportant}>\r\n                        <i className=\"fa fa-star\"></i>\r\n                    </button>\r\n                    <button\r\n                        type=\"button\"\r\n                        className=\"btn-trash btn-sm\"\r\n                        onClick={onDelete}>\r\n                        <i className=\"fa fa-trash-o\"></i>\r\n                    </button>\r\n                    <i className=\"fa fa-heart\"></i>\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\n","import List from \"./postList\";\r\nexport default List;","import React from 'react';\r\nimport Item from '../post-list-item';\r\nimport './post-list.css'\r\nconst List = ({ posts, onDelete, onToggleImportant, onToggleLiked }) => {\r\n    const elements = posts.map(i => {\r\n        const { id, ...itemProps } = i;\r\n        return (\r\n            <li key={id} className=\"list-group-item\">\r\n                <Item {...itemProps}\r\n                    onDelete={() => onDelete(id)}\r\n                    onToggleImportant={() => onToggleImportant(id)}\r\n                    onToggleLiked={() => onToggleLiked(id)}\r\n                />\r\n            </li>\r\n        )\r\n    });\r\n    return (\r\n\r\n        <ul className=\"app-list list-group\">\r\n            {elements}\r\n        </ul>\r\n    )\r\n}\r\n\r\nexport default List;","import AddForm from \"./addForm\";\r\nexport default AddForm;","import React, { Component } from 'react';\r\nimport './post-add-form.css';\r\n\r\nexport default class AddForm extends Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            text: ''\r\n        };\r\n        this.onValueChange = this.onValueChange.bind(this);\r\n        this.onSubmit = this.onSubmit.bind(this);\r\n    }\r\n    onValueChange(e) {\r\n        this.setState({\r\n            text: e.target.value\r\n        });\r\n    }\r\n    onSubmit(e) {\r\n        e.preventDefault();\r\n        this.props.onAdd(this.state.text);\r\n        this.setState({\r\n            text: ''\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <form\r\n                className=\"bottom-panel d-flex\"\r\n                onSubmit={this.onSubmit}>\r\n                <input\r\n                    type=\"text\"\r\n                    placeholder=\"Enter your message\"\r\n                    className=\"form-control new-post-label\"\r\n                    onChange={this.onValueChange}\r\n                    value={this.state.text}\r\n                />\r\n                <button\r\n                    type=\"submit\"\r\n                    className=\"btn btn-outline-secondary\">\r\n                    Add\r\n                    </button>\r\n            </form>\r\n        )\r\n    }\r\n}","import App from './app'\r\nexport default App;","import React, { Component } from 'react';\r\n\r\nimport AppHeader from '../header';\r\nimport SearchPanel from '../search';\r\nimport Filter from '../post-status';\r\nimport List from '../Post-list';\r\nimport AddForm from '../post-add-form';\r\n\r\nimport './app.css';\r\n\r\nexport default class App extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            data: [\r\n                {\r\n                    label: \"I want to break free\",\r\n                    important: true,\r\n                    id: 1\r\n                },\r\n                {\r\n                    label: \"I want to break free from your lies\",\r\n                    important: false,\r\n                    id: 2\r\n                },\r\n                {\r\n                    label: \"You're so self satisfied I don't need you\",\r\n                    important: false,\r\n                    id: 3\r\n                },\r\n                {\r\n                    label: \"I've got to break free\",\r\n                    important: false,\r\n                    id: 4\r\n                },\r\n                {\r\n                    label: \"God knows, God knows I want to break free.\",\r\n                    important: true,\r\n                    id: 5\r\n                }\r\n            ],\r\n            term: '',\r\n            filter: 'all'\r\n        }\r\n        this.deleteItem = this.deleteItem.bind(this);\r\n        this.addItem = this.addItem.bind(this);\r\n        this.onToggleImportant = this.onToggleImportant.bind(this);\r\n        this.onToggleLiked = this.onToggleLiked.bind(this);\r\n        this.onUpdateSearch = this.onUpdateSearch.bind(this);\r\n        this.onFilterSelect = this.onFilterSelect.bind(this);\r\n        this.maxId = 6;\r\n    }\r\n    deleteItem(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex((elem) => elem.id === id);\r\n\r\n            const before = data.slice(0, index);\r\n            const after = data.slice(index + 1);\r\n\r\n            const newArr = [...before, ...after];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    addItem(text) {\r\n        const newItem = {\r\n            label: text,\r\n            important: false,\r\n            id: this.maxId++\r\n        }\r\n\r\n        this.setState(({ data }) => {\r\n            const newArr = [...data, newItem];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n    onToggleImportant(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = { ...old, important: !old.important };\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    onToggleLiked(id) {\r\n        this.setState(({ data }) => {\r\n            const index = data.findIndex(elem => elem.id === id);\r\n\r\n            const old = data[index];\r\n            const newItem = { ...old, like: !old.like };\r\n\r\n            const newArr = [...data.slice(0, index), newItem, ...data.slice(index + 1)];\r\n            return {\r\n                data: newArr\r\n            }\r\n        });\r\n    }\r\n\r\n    searchPost(items, term) {\r\n        if (term.length === 0) {\r\n            return items\r\n        }\r\n\r\n        return items.filter((item) => {\r\n            return item.label.indexOf(term) > -1\r\n        });\r\n    }\r\n\r\n    filterPost(items, filter) {\r\n        if (filter === 'like') {\r\n            return items.filter(item => item.like)\r\n        } else {\r\n            return items\r\n        }\r\n    }\r\n\r\n    onUpdateSearch(term) {\r\n        this.setState({ term })\r\n    }\r\n\r\n    onFilterSelect(filter) {\r\n        this.setState({ filter })\r\n    }\r\n    render() {\r\n        const { data, term, filter } = this.state;\r\n        const liked = data.filter((item) => item.like).length;\r\n        const allPosts = data.length;\r\n        const visiblePosts = this.filterPost(this.searchPost(data, term), filter);\r\n        return (\r\n            <div className=\"app\" >\r\n                <AppHeader liked={liked} allPosts={allPosts} />\r\n                <div className=\"search-panel d-flex\">\r\n                    <SearchPanel onUpdateSearch={this.onUpdateSearch} />\r\n                    <Filter filter={filter}\r\n                        onFilterSelect={this.onFilterSelect} />\r\n                </div>\r\n                <List posts={visiblePosts}\r\n                    onDelete={this.deleteItem}\r\n                    onToggleImportant={this.onToggleImportant}\r\n                    onToggleLiked={this.onToggleLiked}\r\n                />\r\n                <AddForm onAdd={this.addItem} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));"],"sourceRoot":""}